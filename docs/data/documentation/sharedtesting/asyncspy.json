{"kind":"symbol","abstract":[{"text":"A class for spying on asynchronous operations in Swift.","type":"text"}],"identifier":{"url":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy","interfaceLanguage":"swift"},"metadata":{"externalID":"s:13SharedTesting8AsyncSpyC","navigatorTitle":[{"text":"AsyncSpy","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AsyncSpy","kind":"identifier"}],"symbolKind":"class","role":"symbol","modules":[{"name":"SharedTesting"}],"roleHeading":"Class","title":"AsyncSpy"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/init()"],"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/performCallCount"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-79903","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-7uuf9","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-6gqqc","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-sxx2","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/params(at:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/perform(_:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)"],"anchor":"Asynchronous-Process-Handling","title":"Asynchronous Process Handling"}],"hierarchy":{"paths":[["doc:\/\/SharedTesting\/documentation\/SharedTesting"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSpy"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AsyncSpy"},{"type":"text","text":" allows you to track and control the execution of asynchronous operations,"},{"type":"text","text":" "},{"type":"text","text":"making it useful for testing scenarios where you need to simulate or verify"},{"type":"text","text":" "},{"type":"text","text":"asynchronous behavior."}]},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This class is designed to be used in a testing environment."}]}],"type":"aside"},{"level":1,"anchor":"AsyncSpy-Usage-Guide","text":"AsyncSpy Usage Guide","type":"heading"},{"inlineContent":[{"type":"text","text":"AsyncSpy is a powerful tool for testing asynchronous code in Swift. Hereâ€™s how to use it effectively:"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Setup","text":"Setup"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Given protocol for the asynchronous operation you want to test:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["protocol FetchUserProtocol {","    func fetch(by id: Int) async throws -> User","}"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement AsyncSpy conformance to your protocol:"}]},{"syntax":"swift","type":"codeListing","code":["extension AsyncSpy: FetchUserProtocol where Result == User {","    func fetch(by id: Int) async throws -> User {","        try await perform(id)","    }","}"]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"2a. Implement AsyncSpy conformance to protocol with arbitrary number of arguments:"}]},{"syntax":"swift","code":["extension AsyncSpy: UpdateUserProtocol where Result == Void {","    func update(user: User, sessionID: UUID, time: Date) async throws -> Void {","        try await perform(user, sessionID, time)","    }","}"],"type":"codeListing"},{"start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In your test class, create a method to set up the system under test (SUT):"}]},{"syntax":"swift","type":"codeListing","code":["final class ExampleTests: XCTestCase {","    @MainActor","    private func makeSUT() -> (sut: FetchUserViewModel, spy: AsyncSpy<User>) {","        let spy = AsyncSpy<User>()","        let sut = FetchUserViewModel(fetchUser: spy)","        return (sut, spy)","    }","}"]}]}],"type":"orderedList"},{"anchor":"Writing-Tests","type":"heading","level":2,"text":"Writing Tests"},{"level":3,"text":"Testing Successful Operations","anchor":"Testing-Successful-Operations","type":"heading"},{"inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"async"},{"text":" method to control the flow of asynchronous operations:","type":"text"}],"type":"paragraph"},{"code":["@MainActor","func testLoadSuccess() async throws {","    let (sut, spy) = makeSUT()","    try await spy.async {","        await sut.fetchUser(by: 1)","    } completeWith: {","        .success(User(id: 1, name: \"Alice\"))","    } expectationAfterCompletion: { _ in","        XCTAssertEqual(spy.loadCallCount, 1)","        XCTAssertEqual(spy.params(at: 0)[0] as? Int, 1)","        XCTAssertEqual(sut.user?.id, 1)","        XCTAssertEqual(sut.user?.name, \"Alice\")","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"text":"Testing Loading States","anchor":"Testing-Loading-States"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use expectationBeforeCompletion and expectationAfterCompletion to verify state changes:"}]},{"syntax":"swift","type":"codeListing","code":["@MainActor","func testLoading() async throws {","    let (sut, spy) = makeSUT()","    try await spy.async {","        await sut.fetchUser(by: 1)","    } expectationBeforeCompletion: {","        XCTAssertTrue(sut.isLoading)","    } completeWith: {","        .failure(NSError(domain: \"\", code: 0))","    } expectationAfterCompletion: { _ in","        XCTAssertFalse(sut.isLoading)","    }","}"]},{"level":3,"text":"Controlling Timing with yieldCount","anchor":"Controlling-Timing-with-yieldCount","type":"heading"},{"inlineContent":[{"type":"text","text":"Adjust the "},{"type":"codeVoice","code":"yieldCount"},{"type":"text","text":" to control when the completion happens:"}],"type":"paragraph"},{"code":["try await spy.async(yieldCount: 2) {","    await sut.load()","} completeWith: {","    sut.cancel()","    return .success(anyModel)","} expectationAfterCompletion: { _ in","    XCTAssertEqual(sut.state, .empty)","}"],"type":"codeListing","syntax":"swift"},{"text":"Handling Multiple Async Operations","anchor":"Handling-Multiple-Async-Operations","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"code":"at","type":"codeVoice"},{"text":" parameter to specify which completion to invoke:","type":"text"}]},{"code":["try await spy.async(at: 1) {","    await sut.load()","} completeWith: {","    .success(model2)","} expectationAfterCompletion: { _ in","    XCTAssertEqual(sut.state, .ready(model2))","    XCTAssertEqual(spy.loadCallCount, 2)","}"],"syntax":"swift","type":"codeListing"},{"text":"Best Practices","level":2,"anchor":"Best-Practices","type":"heading"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Leverage ","type":"text"},{"code":"expectationBeforeCompletion","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"expectationAfterCompletion"},{"type":"text","text":" to verify state changes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"params(at:)","type":"codeVoice"},{"text":" to verify the parameters passed to async operations.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adjust ","type":"text"},{"type":"codeVoice","code":"yieldCount"},{"text":" to test different timing scenarios.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"at"},{"text":" parameter when dealing with multiple async operations in a single test.","type":"text"}]}]}]}]}],"variants":[{"paths":["\/documentation\/sharedtesting\/asyncspy"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/SharedTesting\/s8SendableP"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/init()":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a new instance of "},{"type":"codeVoice","code":"AsyncSpy"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/init()","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/sharedtesting\/asyncspy\/init()"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/expect(_:sourceLocation:)":{"role":"symbol","type":"topic","title":"expect(_:sourceLocation:)","abstract":[{"text":"Creates an expectation tracker for an asynchronous operation using the Testing framework.","type":"text"}],"url":"\/documentation\/sharedtesting\/testing\/test\/expect(_:sourcelocation:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"expect","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Testing14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ExpectationTracker","kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}]},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/trackChange(of:in:sourceLocation:)":{"abstract":[{"type":"text","text":"Tracks changes to a property of a given object during a sequence of events and actions."}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)","title":"trackChange(of:in:sourceLocation:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/trackchange(of:in:sourcelocation:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trackChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"SUT","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"SUT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SUT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"text":": ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV"},{"text":") -> ","kind":"text"},{"text":"ChangeTracker","kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting13ChangeTrackerV"},{"kind":"text","text":"<"},{"text":"SUT","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/perform(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"perform","kind":"identifier"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Parameter"},{"text":">(repeat each ","kind":"text"},{"text":"Parameter","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"title":"perform(_:)","url":"\/documentation\/sharedtesting\/asyncspy\/perform(_:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/perform(_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Simulates an asynchronous operation, capturing the parameters and providing a continuation."}]},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/params(at:)":{"kind":"symbol","abstract":[{"text":"Retrieves the parameters passed to a specific call of ","type":"text"},{"code":"perform","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/params(at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"params","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> [any "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/sharedtesting\/asyncspy\/params(at:)","role":"symbol","type":"topic","title":"params(at:)"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/complete(with:at:sourceLocation:)-sxx2":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"complete"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Testing14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"complete(with:at:sourceLocation:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-sxx2","url":"\/documentation\/sharedtesting\/asyncspy\/complete(with:at:sourcelocation:)-sxx2","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Completes a pending operation with a result."}],"type":"topic"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)":{"title":"async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","url":"\/documentation\/sharedtesting\/asyncspy\/async(yieldcount:process:expectationbeforecompletion:completewith:expectationaftercompletion:sourcelocation:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"async","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"yieldCount","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"process","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expectationBeforeCompletion"},{"kind":"text","text":": (() -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"completeWith","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"expectationAfterCompletion"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?, "},{"text":"sourceLocation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Result"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Executes an asynchronous process with controlled timing and completion.","type":"text"}],"type":"topic","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","role":"symbol"},"doc://SharedTesting/s8SendableP":{"identifier":"doc:\/\/SharedTesting\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"AsyncSpy","kind":"identifier"}],"title":"AsyncSpy","abstract":[{"type":"text","text":"A class for spying on asynchronous operations in Swift."}],"url":"\/documentation\/sharedtesting\/asyncspy","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSpy"}]},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-7uuf9":{"kind":"symbol","url":"\/documentation\/sharedtesting\/asyncspy\/async(yieldcount:at:process:expectationbeforecompletion:completewith:expectationaftercompletion:sourcelocation:)-7uuf9","title":"async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-7uuf9","abstract":[{"text":"Executes an asynchronous process with controlled timing and completion at a specific index.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"async"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"yieldCount"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"process"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expectationBeforeCompletion"},{"text":": (() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"completeWith"},{"text":": (() -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">)?, ","kind":"text"},{"text":"expectationAfterCompletion","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"sourceLocation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Testing14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"conformance":{"constraints":[{"code":"Result","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-79903":{"abstract":[{"text":"Executes an asynchronous process with controlled timing and completion at a specific index.","type":"text"}],"url":"\/documentation\/sharedtesting\/asyncspy\/async(yieldcount:at:process:expectationbeforecompletion:completewith:expectationaftercompletion:sourcelocation:)-79903","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Result","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-79903","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"async"},{"kind":"text","text":"("},{"text":"yieldCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"process","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"text":"expectationBeforeCompletion","kind":"externalParam"},{"kind":"text","text":": (() -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"completeWith","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">)?, ","kind":"text"},{"text":"expectationAfterCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"sourceLocation","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV","text":"SourceLocation"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","title":"async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","role":"symbol"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/performCallCount":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"performCallCount","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/sharedtesting\/asyncspy\/performcallcount","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/performCallCount","title":"performCallCount","abstract":[{"text":"The number of times the ","type":"text"},{"type":"codeVoice","code":"perform"},{"text":" method has been called.","type":"text"}],"kind":"symbol"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/complete(with:at:sourceLocation:)-6gqqc":{"kind":"symbol","abstract":[{"type":"text","text":"Completes a pending operation with an error."}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-6gqqc","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"complete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"text":"SourceLocation","preciseIdentifier":"s:7Testing14SourceLocationV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/sharedtesting\/asyncspy\/complete(with:at:sourcelocation:)-6gqqc","role":"symbol","type":"topic","title":"complete(with:at:sourceLocation:)"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)":{"abstract":[{"type":"text","text":"Executes an asynchronous process with optional hooks before and after completion."}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","title":"async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/async(yieldcount:process:onbeforecompletion:onaftercompletion:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"async"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"yieldCount","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"process","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"onBeforeCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"text":"onAfterCompletion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://SharedTesting/documentation/SharedTesting":{"url":"\/documentation\/sharedtesting","type":"topic","abstract":[{"text":"A comprehensive testing utility package designed to simplify and enhance the process of writing unit tests in Swift.","type":"text"}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting","role":"collection","kind":"symbol","title":"SharedTesting"}}}