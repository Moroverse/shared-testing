{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy"},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/init()"],"anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/performCallCount"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-79903","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-7uuf9","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-6gqqc","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-sxx2","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/params(at:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/perform(_:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"hierarchy":{"paths":[["doc:\/\/SharedTesting\/documentation\/SharedTesting"]]},"metadata":{"title":"AsyncSpy","navigatorTitle":[{"text":"AsyncSpy","kind":"identifier"}],"externalID":"s:13SharedTesting8AsyncSpyC","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSpy","kind":"identifier"}],"modules":[{"name":"SharedTesting"}],"symbolKind":"class","roleHeading":"Class"},"abstract":[{"type":"text","text":"A class for spying on asynchronous operations in Swift."}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/SharedTesting\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"kind":"symbol","seeAlsoSections":[{"anchor":"Asynchronous-Process-Handling","identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-7ezxb","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-15a0j","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)"],"generated":true,"title":"Asynchronous Process Handling"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSpy","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"code":"AsyncSpy","type":"codeVoice"},{"text":" allows you to track and control the execution of asynchronous operations,","type":"text"},{"type":"text","text":" "},{"text":"making it useful for testing scenarios where you need to simulate or verify","type":"text"},{"type":"text","text":" "},{"text":"asynchronous behavior.","type":"text"}]},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This class is designed to be used in a testing environment."}]}]},{"level":1,"type":"heading","anchor":"AsyncSpy-Usage-Guide","text":"AsyncSpy Usage Guide"},{"type":"paragraph","inlineContent":[{"type":"text","text":"AsyncSpy is a powerful tool for testing asynchronous code in Swift. Hereâ€™s how to use it effectively:"}]},{"anchor":"Setup","text":"Setup","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Given protocol for the asynchronous operation you want to test:","type":"text"}]},{"syntax":"swift","code":["protocol FetchUserProtocol {","    func fetch(by id: Int) async throws -> User","}"],"type":"codeListing"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement AsyncSpy conformance to your protocol:"}]},{"syntax":"swift","type":"codeListing","code":["extension AsyncSpy: FetchUserProtocol where Result == User {","    func fetch(by id: Int) async throws -> User {","        try await perform(id)","    }","}"]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"2a. Implement AsyncSpy conformance to protocol with arbitrary number of arguments:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension AsyncSpy: UpdateUserProtocol where Result == Void {","    func update(user: User, sessionID: UUID, time: Date) async throws -> Void {","        try await perform(user, sessionID, time)","    }","}"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In your test class, create a method to set up the system under test (SUT):"}]},{"type":"codeListing","syntax":"swift","code":["final class ExampleTests: XCTestCase {","    @MainActor","    private func makeSUT() -> (sut: FetchUserViewModel, spy: AsyncSpy<User>) {","        let spy = AsyncSpy<User>()","        let sut = FetchUserViewModel(fetchUser: spy)","        return (sut, spy)","    }","}"]}]}],"type":"orderedList","start":3},{"text":"Writing Tests","level":2,"anchor":"Writing-Tests","type":"heading"},{"anchor":"Testing-Successful-Operations","level":3,"type":"heading","text":"Testing Successful Operations"},{"inlineContent":[{"type":"text","text":"Use the "},{"code":"async","type":"codeVoice"},{"text":" method to control the flow of asynchronous operations:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@MainActor","func testLoadSuccess() async throws {","    let (sut, spy) = makeSUT()","    try await spy.async {","        await sut.fetchUser(by: 1)","    } completeWith: {","        .success(User(id: 1, name: \"Alice\"))","    } expectationAfterCompletion: { _ in","        XCTAssertEqual(spy.loadCallCount, 1)","        XCTAssertEqual(spy.params(at: 0)[0] as? Int, 1)","        XCTAssertEqual(sut.user?.id, 1)","        XCTAssertEqual(sut.user?.name, \"Alice\")","    }","}"]},{"text":"Testing Loading States","type":"heading","anchor":"Testing-Loading-States","level":3},{"inlineContent":[{"text":"Use expectationBeforeCompletion and expectationAfterCompletion to verify state changes:","type":"text"}],"type":"paragraph"},{"code":["@MainActor","func testLoading() async throws {","    let (sut, spy) = makeSUT()","    try await spy.async {","        await sut.fetchUser(by: 1)","    } expectationBeforeCompletion: {","        XCTAssertTrue(sut.isLoading)","    } completeWith: {","        .failure(NSError(domain: \"\", code: 0))","    } expectationAfterCompletion: { _ in","        XCTAssertFalse(sut.isLoading)","    }","}"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"Controlling Timing with yieldCount","anchor":"Controlling-Timing-with-yieldCount"},{"type":"paragraph","inlineContent":[{"text":"Adjust the ","type":"text"},{"code":"yieldCount","type":"codeVoice"},{"type":"text","text":" to control when the completion happens:"}]},{"type":"codeListing","syntax":"swift","code":["try await spy.async(yieldCount: 2) {","    await sut.load()","} completeWith: {","    sut.cancel()","    return .success(anyModel)","} expectationAfterCompletion: { _ in","    XCTAssertEqual(sut.state, .empty)","}"]},{"type":"heading","anchor":"Handling-Multiple-Async-Operations","text":"Handling Multiple Async Operations","level":3},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"at"},{"type":"text","text":" parameter to specify which completion to invoke:"}]},{"syntax":"swift","type":"codeListing","code":["try await spy.async(at: 1) {","    await sut.load()","} completeWith: {","    .success(model2)","} expectationAfterCompletion: { _ in","    XCTAssertEqual(sut.state, .ready(model2))","    XCTAssertEqual(spy.loadCallCount, 2)","}"]},{"text":"Best Practices","anchor":"Best-Practices","level":2,"type":"heading"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Leverage "},{"type":"codeVoice","code":"expectationBeforeCompletion"},{"type":"text","text":" and "},{"type":"codeVoice","code":"expectationAfterCompletion"},{"text":" to verify state changes.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"params(at:)"},{"type":"text","text":" to verify the parameters passed to async operations."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Adjust "},{"type":"codeVoice","code":"yieldCount"},{"type":"text","text":" to test different timing scenarios."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"at"},{"text":" parameter when dealing with multiple async operations in a single test.","type":"text"}]}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/sharedtesting\/asyncspy"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/complete(with:at:sourceLocation:)-sxx2":{"url":"\/documentation\/sharedtesting\/asyncspy\/complete(with:at:sourcelocation:)-sxx2","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-sxx2","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"complete","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"sourceLocation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Testing14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Completes a pending operation with a result."}],"title":"complete(with:at:sourceLocation:)"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-7uuf9":{"url":"\/documentation\/sharedtesting\/asyncspy\/async(yieldcount:at:process:expectationbeforecompletion:completewith:expectationaftercompletion:sourcelocation:)-7uuf9","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","title":"async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","role":"symbol","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-7uuf9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"async"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"yieldCount","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"process","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expectationBeforeCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"completeWith","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"Result","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"expectationAfterCompletion"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:7Testing14SourceLocationV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Executes an asynchronous process with controlled timing and completion at a specific index."}]},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/complete(with:at:sourceLocation:)-6gqqc":{"url":"\/documentation\/sharedtesting\/asyncspy\/complete(with:at:sourcelocation:)-6gqqc","type":"topic","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/complete(with:at:sourceLocation:)-6gqqc","abstract":[{"type":"text","text":"Completes a pending operation with an error."}],"role":"symbol","kind":"symbol","title":"complete(with:at:sourceLocation:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"complete","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Testing14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"},{"text":")","kind":"text"}]},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/params(at:)":{"url":"\/documentation\/sharedtesting\/asyncspy\/params(at:)","type":"topic","kind":"symbol","title":"params(at:)","role":"symbol","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/params(at:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"params"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> [any ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Retrieves the parameters passed to a specific call of "},{"type":"codeVoice","code":"perform"},{"type":"text","text":"."}]},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/perform(_:)":{"url":"\/documentation\/sharedtesting\/asyncspy\/perform(_:)","type":"topic","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/perform(_:)","abstract":[{"type":"text","text":"Simulates an asynchronous operation, capturing the parameters and providing a continuation."}],"role":"symbol","kind":"symbol","title":"perform(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"perform"},{"kind":"text","text":"<each "},{"text":"Parameter","kind":"genericParameter"},{"kind":"text","text":">(repeat each "},{"text":"Parameter","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}]},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/init()":{"url":"\/documentation\/sharedtesting\/asyncspy\/init()","type":"topic","kind":"symbol","title":"init()","role":"symbol","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"text":"Initializes a new instance of ","type":"text"},{"code":"AsyncSpy","type":"codeVoice"},{"text":".","type":"text"}]},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/expect(_:sourceLocation:)-7ezxb":{"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-7ezxb","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV","text":"ExpectationTracker"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}],"url":"\/documentation\/sharedtesting\/testing\/test\/expect(_:sourcelocation:)-7ezxb","kind":"symbol","title":"expect(_:sourceLocation:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates an expectation tracker for an asynchronous operation using the Testing framework."}]},"doc://SharedTesting/s8SendableP":{"identifier":"doc:\/\/SharedTesting\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/expect(_:sourceLocation:)-15a0j":{"kind":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expect"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV","kind":"typeIdentifier","text":"ExpectationTracker"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"expect(_:sourceLocation:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-15a0j","role":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/expect(_:sourcelocation:)-15a0j"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)":{"title":"async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"async"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"yieldCount"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"process","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"expectationBeforeCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"completeWith","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"expectationAfterCompletion"},{"kind":"text","text":": (("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Testing14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Executes an asynchronous process with controlled timing and completion.","type":"text"}],"type":"topic","url":"\/documentation\/sharedtesting\/asyncspy\/async(yieldcount:process:expectationbeforecompletion:completewith:expectationaftercompletion:sourcelocation:)","kind":"symbol","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Result"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/performCallCount":{"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/performCallCount","url":"\/documentation\/sharedtesting\/asyncspy\/performcallcount","type":"topic","title":"performCallCount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performCallCount","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The number of times the "},{"code":"perform","type":"codeVoice"},{"type":"text","text":" method has been called."}],"kind":"symbol","role":"symbol"},"doc://SharedTesting/documentation/SharedTesting":{"role":"collection","abstract":[{"text":"A comprehensive testing utility package designed to simplify and enhance the process of writing unit tests in Swift.","type":"text"}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting","kind":"symbol","url":"\/documentation\/sharedtesting","type":"topic","title":"SharedTesting"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy":{"navigatorTitle":[{"text":"AsyncSpy","kind":"identifier"}],"url":"\/documentation\/sharedtesting\/asyncspy","type":"topic","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy","role":"symbol","abstract":[{"type":"text","text":"A class for spying on asynchronous operations in Swift."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSpy","kind":"identifier"}],"kind":"symbol","title":"AsyncSpy"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Executes an asynchronous process with optional hooks before and after completion."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"async","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"yieldCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"process"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onBeforeCompletion"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?, ","kind":"text"},{"text":"onAfterCompletion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","role":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/async(yieldcount:process:onbeforecompletion:onaftercompletion:)"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/trackChange(of:in:sourceLocation:)":{"abstract":[{"text":"Tracks changes to a property of a given object during a sequence of events and actions.","type":"text"}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trackChange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SUT"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"SUT"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SUT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Testing14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting13ChangeTrackerV","text":"ChangeTracker"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"SUT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"url":"\/documentation\/sharedtesting\/testing\/test\/trackchange(of:in:sourcelocation:)","kind":"symbol","type":"topic","title":"trackChange(of:in:sourceLocation:)"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-79903":{"title":"async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"async"},{"kind":"text","text":"("},{"text":"yieldCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"process","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"expectationBeforeCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"completeWith","kind":"externalParam"},{"kind":"text","text":": (() -> "},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">)?, ","kind":"text"},{"text":"expectationAfterCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV","text":"SourceLocation"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Executes an asynchronous process with controlled timing and completion at a specific index."}],"type":"topic","url":"\/documentation\/sharedtesting\/asyncspy\/async(yieldcount:at:process:expectationbeforecompletion:completewith:expectationaftercompletion:sourcelocation:)-79903","kind":"symbol","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy\/async(yieldCount:at:process:expectationBeforeCompletion:completeWith:expectationAfterCompletion:sourceLocation:)-79903","conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"}}}