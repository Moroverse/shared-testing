{"seeAlsoSections":[{"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-15a0j","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)"],"generated":true,"anchor":"Asynchronous-Process-Handling","title":"Asynchronous Process Handling"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Type Method","externalID":"s:7Testing4TestV06SharedA0E6expect_14sourceLocationAD18ExpectationTrackerVyxq_GxyYaYbKc_AA06SourceF0VtSQRzs8SendableRzSQR_s5ErrorR_r0_lFZ","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expect","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"sourceLocation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocation","preciseIdentifier":"s:7Testing14SourceLocationV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV","text":"ExpectationTracker","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}],"extendedModule":"Testing","title":"expect(_:sourceLocation:)","symbolKind":"method","role":"symbol","modules":[{"name":"SharedTesting","relatedModules":["Testing"]}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expect","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"sourceLocation","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:7Testing14SourceLocationV"},{"text":" = #_sourceLocation) -> ","kind":"text"},{"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/ExpectationTracker","text":"ExpectationTracker","preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","text":"Equatable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"action","content":[{"type":"paragraph","inlineContent":[{"text":"An asynchronous closure representing the operation to be tested.","type":"text"}]}]},{"name":"sourceLocation","content":[{"type":"paragraph","inlineContent":[{"text":"The source location where the expectation is being set up. Defaults to the current location.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"ExpectationTracker"},{"type":"text","text":" instance that you can use to configure and execute the expectation."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method provides a fluent interface to set up and execute expectations for asynchronous operations.","type":"text"},{"text":" ","type":"text"},{"text":"It allows you to specify the expected result and an optional event to occur before completion.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage:"}]},{"type":"codeListing","syntax":"swift","code":[" @Test(\"ViewModel fetches data successfully\")"," func testFetchDataSuccess() async throws {","     let spy = MockNetworkService()","     let viewModel = ViewModel(networkService: spy)","     let data = [\"item1\", \"item2\"].joined(separator: \",\").data(using: .utf8)!","","     await Test.expect { try await viewModel.fetchItems() }","         .toCompleteWith { .success([\"item1\", \"item2\"]) }","         .when { await spy.completeWith(.success(data)) }","         .execute()"," }"]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"expect"},{"type":"text","text":" is called with an async closure that fetches data from the view model."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"toCompleteWith"},{"type":"text","text":" specifies the expected successful result."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"when","type":"codeVoice"},{"type":"text","text":" defines an action to be performed before the operation completes ."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"execute()"},{"text":" runs the expectation and performs the assertions.","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"You can also use it to test for expected errors:"}],"type":"paragraph"},{"syntax":"swift","code":["    func testFetchDataError() async throws {","        let spy = FailingNetworkService()","        let viewModel = ViewModel(networkService: spy)","        let error = NetworkError.connectionLost","","        await Test.expect { try await viewModel.fetchItems() }","            .toCompleteWith { .failure(error) }","            .when { await spy.completeWith(.failure(error)) }","            .execute()","    }"],"type":"codeListing"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"execute()","type":"codeVoice"},{"text":" method must be called at the end of the chain to perform the expectation.","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/sharedtesting\/testing\/test\/expect(_:sourcelocation:)-7ezxb"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Creates an expectation tracker for an asynchronous operation using the Testing framework."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-7ezxb"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SharedTesting\/documentation\/SharedTesting","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test"]]},"references":{"doc://SharedTesting/documentation/SharedTesting/Testing/Test/expect(_:sourceLocation:)-7ezxb":{"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-7ezxb","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV","text":"ExpectationTracker"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}],"url":"\/documentation\/sharedtesting\/testing\/test\/expect(_:sourcelocation:)-7ezxb","kind":"symbol","title":"expect(_:sourceLocation:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates an expectation tracker for an asynchronous operation using the Testing framework."}]},"doc://SharedTesting/documentation/SharedTesting/Testing":{"type":"topic","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing","url":"\/documentation\/sharedtesting\/testing","abstract":[],"kind":"symbol","role":"collection","title":"Testing"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy":{"navigatorTitle":[{"text":"AsyncSpy","kind":"identifier"}],"url":"\/documentation\/sharedtesting\/asyncspy","type":"topic","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy","role":"symbol","abstract":[{"type":"text","text":"A class for spying on asynchronous operations in Swift."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSpy","kind":"identifier"}],"kind":"symbol","title":"AsyncSpy"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/expect(_:sourceLocation:)-15a0j":{"kind":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expect"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV","kind":"typeIdentifier","text":"ExpectationTracker"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"expect(_:sourceLocation:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)-15a0j","role":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/expect(_:sourcelocation:)-15a0j"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/trackChange(of:in:sourceLocation:)":{"abstract":[{"text":"Tracks changes to a property of a given object during a sequence of events and actions.","type":"text"}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trackChange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SUT"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"SUT"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SUT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Testing14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting13ChangeTrackerV","text":"ChangeTracker"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"SUT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"url":"\/documentation\/sharedtesting\/testing\/test\/trackchange(of:in:sourcelocation:)","kind":"symbol","type":"topic","title":"trackChange(of:in:sourceLocation:)"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test":{"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test","role":"symbol","abstract":[],"url":"\/documentation\/sharedtesting\/testing\/test","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Testing4TestV","text":"Test","kind":"identifier"}],"kind":"symbol","title":"Test","type":"topic","navigatorTitle":[{"text":"Test","kind":"identifier"}]},"doc://SharedTesting/documentation/SharedTesting":{"role":"collection","abstract":[{"text":"A comprehensive testing utility package designed to simplify and enhance the process of writing unit tests in Swift.","type":"text"}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting","kind":"symbol","url":"\/documentation\/sharedtesting","type":"topic","title":"SharedTesting"},"doc://SharedTesting/documentation/SharedTesting/ExpectationTracker":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExpectationTracker","kind":"identifier"}],"title":"ExpectationTracker","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/ExpectationTracker","role":"symbol","url":"\/documentation\/sharedtesting\/expectationtracker","type":"topic","abstract":[{"text":"A struct that facilitates tracking expectations for asynchronous operations.","type":"text"}],"navigatorTitle":[{"text":"ExpectationTracker","kind":"identifier"}],"kind":"symbol"},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Executes an asynchronous process with optional hooks before and after completion."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"async","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"yieldCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"process"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onBeforeCompletion"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?, ","kind":"text"},{"text":"onAfterCompletion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","role":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/async(yieldcount:process:onbeforecompletion:onaftercompletion:)"}}}