{"abstract":[{"type":"text","text":"Executes an asynchronous process with optional hooks before and after completion."}],"seeAlsoSections":[{"identifiers":["doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)"],"title":"Asynchronous Process Handling","generated":true,"anchor":"Asynchronous-Process-Handling"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SharedTesting\/documentation\/SharedTesting","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing","doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sharedtesting\/testing\/test\/async(yieldcount:process:onbeforecompletion:onaftercompletion:)"]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"async"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"yieldCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":" = 1, ","kind":"text"},{"text":"process","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onBeforeCompletion","kind":"externalParam"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")? = nil, ","kind":"text"},{"kind":"externalParam","text":"onAfterCompletion"},{"text":": ((","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")? = nil) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"yieldCount","content":[{"type":"paragraph","inlineContent":[{"text":"The number of times to yield control to the main serial executor. Defaults to 1.","type":"text"}]}]},{"name":"process","content":[{"inlineContent":[{"type":"text","text":"The asynchronous process to execute."}],"type":"paragraph"}]},{"name":"onBeforeCompletion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional closure to execute before the process completes."}]}]},{"name":"onAfterCompletion","content":[{"inlineContent":[{"type":"text","text":"An optional closure to execute after the process completes, with the result of the process."}],"type":"paragraph"}]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function runs the provided asynchronous process, yielding control to the main serial executor"},{"text":" ","type":"text"},{"text":"a specified number of times. Optional hooks can be executed before and after the process completes.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"An error if the process throws an error."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"},{"code":["try await Test.async(","    yieldCount: 2,","    process: {","        \/\/ Your asynchronous process here","        return \"Result\"","    },","    onBeforeCompletion: {","        print(\"Before completion\")","    },","    onAfterCompletion: { result in","        print(\"After completion with result: \\(result)\")","    }",")"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"roleHeading":"Type Method","role":"symbol","title":"async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","symbolKind":"method","externalID":"s:7Testing4TestV06SharedA0E5async10yieldCount7process18onBeforeCompletion0h5AfterJ0ySi_xyYaKcyycSgyxcSgtYaKs8SendableRzlFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"async","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"yieldCount"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"process","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onBeforeCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"text":"onAfterCompletion","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"modules":[{"name":"SharedTesting","relatedModules":["Testing"]}],"extendedModule":"Testing"},"references":{"doc://SharedTesting/documentation/SharedTesting/Testing/Test/expect(_:sourceLocation:)":{"role":"symbol","type":"topic","title":"expect(_:sourceLocation:)","abstract":[{"text":"Creates an expectation tracker for an asynchronous operation using the Testing framework.","type":"text"}],"url":"\/documentation\/sharedtesting\/testing\/test\/expect(_:sourcelocation:)","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/expect(_:sourceLocation:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"expect","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sourceLocation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Testing14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ExpectationTracker","kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting18ExpectationTrackerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":">","kind":"text"}]},"doc://SharedTesting/documentation/SharedTesting/Testing":{"abstract":[],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing","kind":"symbol","url":"\/documentation\/sharedtesting\/testing","type":"topic","title":"Testing","role":"collection"},"doc://SharedTesting/documentation/SharedTesting":{"url":"\/documentation\/sharedtesting","type":"topic","abstract":[{"text":"A comprehensive testing utility package designed to simplify and enhance the process of writing unit tests in Swift.","type":"text"}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting","role":"collection","kind":"symbol","title":"SharedTesting"},"doc://SharedTesting/documentation/SharedTesting/AsyncSpy":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"AsyncSpy","kind":"identifier"}],"title":"AsyncSpy","abstract":[{"type":"text","text":"A class for spying on asynchronous operations in Swift."}],"url":"\/documentation\/sharedtesting\/asyncspy","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/AsyncSpy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSpy"}]},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)":{"abstract":[{"type":"text","text":"Executes an asynchronous process with optional hooks before and after completion."}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","title":"async(yieldCount:process:onBeforeCompletion:onAfterCompletion:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/async(yieldcount:process:onbeforecompletion:onaftercompletion:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"async"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"yieldCount","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"process","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"onBeforeCompletion","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"text":"onAfterCompletion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://SharedTesting/documentation/SharedTesting/Testing/Test":{"navigatorTitle":[{"kind":"identifier","text":"Test"}],"title":"Test","role":"symbol","kind":"symbol","url":"\/documentation\/sharedtesting\/testing\/test","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:7Testing4TestV","text":"Test"}],"type":"topic","identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test","abstract":[]},"doc://SharedTesting/documentation/SharedTesting/Testing/Test/trackChange(of:in:sourceLocation:)":{"abstract":[{"type":"text","text":"Tracks changes to a property of a given object during a sequence of events and actions."}],"identifier":"doc:\/\/SharedTesting\/documentation\/SharedTesting\/Testing\/Test\/trackChange(of:in:sourceLocation:)","title":"trackChange(of:in:sourceLocation:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/sharedtesting\/testing\/test\/trackchange(of:in:sourcelocation:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trackChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"SUT","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"SUT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SUT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sourceLocation"},{"text":": ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:7Testing14SourceLocationV"},{"text":") -> ","kind":"text"},{"text":"ChangeTracker","kind":"typeIdentifier","preciseIdentifier":"s:13SharedTesting13ChangeTrackerV"},{"kind":"text","text":"<"},{"text":"SUT","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]}}}